version: 2.1

executors:
  aws-cli-executor:
    docker:
      - image: cimg/openjdk:17.0
    working_directory: ~/repo
    environment:
      AWS_DEFAULT_REGION: "us-east-1"

jobs:
  test-java:
    docker:
      - image: cimg/openjdk:17.0
    steps:
      - checkout
      - run:
          name: Calculate cache key
          command: |-
            find . -name 'pom.xml' -o -name 'gradlew*' -o -name '*.gradle*' | \
                    sort | xargs cat > /tmp/CIRCLECI_CACHE_KEY
      - restore_cache:
          key: cache-{{ checksum "/tmp/CIRCLECI_CACHE_KEY" }}
      - run:
          name: Run Maven Verify
          command: mvn verify
      - run:
          name: List Target Directory
          command: ls -la target
      - store_test_results:
          path: target/surefire-reports
      - save_cache:
          key: cache-{{ checksum "/tmp/CIRCLECI_CACHE_KEY" }}
          paths:
            - ~/.m2/repository

  deploy:
    executor: aws-cli-executor
    steps:
      - checkout
      - run:
          name: Install AWS CLI
          command: |
            sudo apt-get update
            sudo apt-get install -y awscli
      - run:
          name: Delete Existing CloudFormation Stack
          command: |
            aws cloudformation delete-stack --stack-name my-ec2-stack
            aws cloudformation wait stack-delete-complete --stack-name my-ec2-stack
      - run:
          name: Deploy CloudFormation Stack
          command: |
            aws cloudformation deploy \
              --template-file ec2-instance.yaml \
              --stack-name my-ec2-stack \
              --capabilities CAPABILITY_NAMED_IAM
      - run:
          name: Get EC2 Public DNS
          command: |
            INSTANCE_ID=$(aws cloudformation describe-stack-resources --stack-name my-ec2-stack --query "StackResources[?LogicalResourceId=='MyEC2Instance'].PhysicalResourceId" --output text)
            PUBLIC_DNS=$(aws ec2 describe-instances --instance-ids $INSTANCE_ID --query "Reservations[0].Instances[0].PublicDnsName" --output text)
            echo "EC2 Public DNS: $PUBLIC_DNS"
            echo "PUBLIC_DNS=$PUBLIC_DNS" >> $BASH_ENV
      - add_ssh_keys:
          fingerprints:
            - "SHA256:RsBvAqIjkXlS3NIbrnJhw2YuCOkExnoNcEbIPtMpiB4"  # Replace with your actual SSH key fingerprint
      - run:
          name: Wait for EC2 to be ready
          command: |
            echo "Waiting for EC2 instance to be ready..."
            sleep 15
      - run:
          name: Deploy Java Application
          command: |
            scp -o StrictHostKeyChecking=no target/toDoService-0.0.1-SNAPSHOT.jar ec2-user@$PUBLIC_DNS:~/target/toDoService-0.0.1-SNAPSHOT.jar
            ssh -o StrictHostKeyChecking=no ec2-user@$PUBLIC_DNS "sudo amazon-linux-extras install -y java-openjdk17 && java -jar ~/target/toDoService-0.0.1-SNAPSHOT.jar"

workflows:
  build-and-test:
    jobs:
      - test-java
      - deploy:
          requires:
            - test-java
